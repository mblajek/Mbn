{
   "php": [
      ["array_values((new Mbn('42'))->split(5))", "8.40,8.40,8.40,8.40,8.40"],
      ["array_keys((new Mbn('42'))->split(5))", "0,1,2,3,4"],
      ["array_values((new Mbn('42'))->split(['a'=>2,0=>3,'c'=>5]))", "8.40,12.60,21.00"],
      ["array_keys((new Mbn('42'))->split(['a'=>2,0=>3,'c'=>5]))", "a,0,c"],
      ["Mbn::reduce('mul', ['a'=>2,0=>3,'c'=>5])", "30.00"],
      ["array_values(Mbn::reduce('invm', ['a'=>2,0=>3,'c'=>5]))", "0.50,0.33,0.20"],
      ["array_keys(Mbn::reduce('invm', ['a'=>2,0=>3,'c'=>5]))", "a,0,c"],
      ["array_values(Mbn::reduce('add', ['a'=>5, 0=>7, 'c'=>10], ['a'=>1.1, 0=>1.2, 'c'=>1.3]))", "6.10,8.20,11.30"],
      ["array_keys(Mbn::reduce('add', ['a'=>5, 0=>7, 'c'=>10], ['a'=>1.1, 0=>1.2, 'c'=>1.3]))", "a,0,c"],
      ["array_values(Mbn::reduce('add', ['a'=>5, 0=>7, 'c'=>10], ['a'=>1.1, 0=>1.2, 'x'=>1.3]))", "Mbn.reduce error*"],
      ["gettype((new Mbn(1.2))->toNumber())", "double"],
      ["gettype((new Mbn(1))->toNumber())", "double"],
      ["gettype((new Mbn0(1.2))->toNumber())", "integer"]
   ],
   "js": [
      ["typeof ((new Mbn(1))->toNumber())", "number"],
      ["typeof ((new Mbn0(1.2))->toNumber())", "number"]
   ],
   "both": [
      ["0", "0"],
      ["Mbn::def('V', 4)", "4.00"],
      ["Mbn0::def('V', 4)", "4"],
      ["Mbn::prop()['MbnE']", "true"],
      ["new Mbn(null)", "0.00"],
      ["new Mbn(true)", "1.00"],
      ["new Mbn(false)", "0.00"],
      ["new Mbn0()", "0"],
      ["new Mbn0('1.4')", "1"],
      ["new Mbn0('1.5')", "2"],
      ["new Mbn0(1.6)", "2"],
      ["new Mbn0('-1.4')", "-1"],
      ["new Mbn0('-1.5')", "-2"],
      ["new Mbn0(-1.6)", "-2"],
      ["new Mbn0('-  1.6')", "-2"],
      ["new Mbn0(' - 1.6')", "-2"],
      ["new Mbn0('  -1.6')", "-2"],
      ["new Mbn0(' - 1.6 ')", "-2"],
      ["new Mbn0(' - 1. ')", "-1"],
      ["new Mbn0(' - .6 ')", "-1"],
      ["new Mbn0(' + .6 ')", "1"],
      ["new Mbn('')", "0.00"],
      ["new Mbn(' + ')", "0.00"],
      ["new Mbn(' a ')", "Mbn error*"],
      ["new Mbn('.')", "Mbn error*"],
      ["new Mbn()", "0.00"],
      ["new Mbn('1.234')", "1.23"],
      ["new Mbn('1.235')", "1.24"],
      ["new Mbn(1.236)", "1.24"],
      ["new Mbn('-1.234')", "-1.23"],
      ["new Mbn('-1.235')", "-1.24"],
      ["new Mbn(-1.236)", "-1.24"],
      ["new Mbn('- 1.6')", "-1.60"],
      ["new Mbn(' - 1.6')", "-1.60"],
      ["new Mbn(' -1.6')", "-1.60"],
      ["new Mbn(' - 1.6 ')", "-1.60"],
      ["new Mbn(' - 1. ')", "-1.00"],
      ["new Mbn(' - .6 ')", "-0.60"],
      ["new Mbn(' + .6 ')", "0.60"],
      ["new Mbn20u()", "0"],
      ["new Mbn20u('0,000000000000000000005')", "0,00000000000000000001"],
      ["new Mbn20u('-0,000000000000000000005')", "-0,00000000000000000001"],
      ["new Mbn0(new Mbn(1.495))", "2"],
      ["new Mbn0(new Mbn(-1.495))", "-2"],
      ["new Mbn3c(new Mbn20u('0,999499999999999999994'))", "0,999"],
      ["new Mbn3c(new Mbn20u('0,999499999999999999995'))", "1,000"],
      ["new Mbn3c(new Mbn20u('-0,999499999999999999994'))", "-0,999"],
      ["new Mbn3c(new Mbn20u('-0,999499999999999999995'))", "-1,000"],
      ["new Mbn20u(new Mbn20u('4,5'))", "4,5"],
      ["new Mbn0(new Mbn20u('4,5'))", "5"],
      ["(new Mbn0(-1))->cmp(1)", "-1"],
      ["(new Mbn0(-1))->cmp(0)", "-1"],
      ["(new Mbn0(0))->cmp(1)", "-1"],
      ["(new Mbn0(-1))->cmp(-1)", "0"],
      ["(new Mbn0(0))->cmp(0)", "0"],
      ["(new Mbn0(1))->cmp(1)", "0"],
      ["(new Mbn0(1))->cmp(-1)", "1"],
      ["(new Mbn0(1))->cmp(0)", "1"],
      ["(new Mbn0(0))->cmp(-1)", "1"],
      ["(new Mbn0(-1))->eq(1)", "false"],
      ["(new Mbn0(1))->eq(1)", "true"],
      ["(new Mbn0(1))->eq(-1)", "false"],
      ["(new Mbn0(4))->add(3)", "7"],
      ["(new Mbn0(4))->add(-3)", "1"],
      ["(new Mbn0(-4))->add(3)", "-1"],
      ["(new Mbn0(-4))->add(-3)", "-7"],
      ["(new Mbn0(3))->add(4)", "7"],
      ["(new Mbn0(3))->add(-4)", "-1"],
      ["(new Mbn0(-3))->add(4)", "1"],
      ["(new Mbn0(-3))->add(-4)", "-7"],
      ["(new Mbn0(3))->add(-3)", "0"],
      ["(new Mbn0(-3))->add(3)", "0"],
      ["(new Mbn0(4))->sub(3)", "1"],
      ["(new Mbn0(4))->sub(-3)", "7"],
      ["(new Mbn0(-4))->sub(3)", "-7"],
      ["(new Mbn0(-4))->sub(-3)", "-1"],
      ["(new Mbn0(3))->sub(4)", "-1"],
      ["(new Mbn0(3))->sub(-4)", "7"],
      ["(new Mbn0(-3))->sub(4)", "-7"],
      ["(new Mbn0(-3))->sub(-4)", "1"],
      ["(new Mbn0(3))->sub(3)", "0"],
      ["(new Mbn0(-3))->sub(-3)", "0"],
      ["(new Mbn0(3))->add(0)", "3"],
      ["(new Mbn0(-3))->add(0)", "-3"],
      ["(new Mbn0(0))->add(3)", "3"],
      ["(new Mbn0(0))->add(-3)", "-3"],
      ["(new Mbn0(3))->sub(0)", "3"],
      ["(new Mbn0(-3))->sub(0)", "-3"],
      ["(new Mbn0(0))->sub(3)", "-3"],
      ["(new Mbn0(0))->sub(-3)", "3"],
      ["(new Mbn0(4))->mul(3)", "12"],
      ["(new Mbn0(4))->mul(-3)", "-12"],
      ["(new Mbn0(-4))->mul(3)", "-12"],
      ["(new Mbn0(-4))->mul(-3)", "12"],
      ["(new Mbn0(3))->mul(4)", "12"],
      ["(new Mbn0(3))->mul(-4)", "-12"],
      ["(new Mbn0(-3))->mul(4)", "-12"],
      ["(new Mbn0(-3))->mul(-4)", "12"],
      ["(new Mbn0(4))->div(3)", "1"],
      ["(new Mbn0(4))->div(-3)", "-1"],
      ["(new Mbn0(-4))->div(3)", "-1"],
      ["(new Mbn0(-4))->div(-3)", "1"],
      ["(new Mbn0(3))->div(4)", "1"],
      ["(new Mbn0(3))->div(-4)", "-1"],
      ["(new Mbn0(-3))->div(4)", "-1"],
      ["(new Mbn0(-3))->div(-4)", "1"],
      ["(new Mbn0(5))->div(3)", "2"],
      ["(new Mbn0(5))->div(-3)", "-2"],
      ["(new Mbn0(-5))->div(3)", "-2"],
      ["(new Mbn0(-5))->div(-3)", "2"],
      ["(new Mbn0(2))->div(5)", "0"],
      ["(new Mbn0(2))->div(-5)", "0"],
      ["(new Mbn0(-2))->div(5)", "0"],
      ["(new Mbn0(-2))->div(-5)", "0"],
      ["(new Mbn0(3))->mul(0)", "0"],
      ["(new Mbn0(-3))->mul(0)", "0"],
      ["(new Mbn0(0))->mul(3)", "0"],
      ["(new Mbn0(0))->mul(-3)", "0"],
      ["(new Mbn0(3))->div(0)", "Mbn.div error*"],
      ["(new Mbn0(-3))->div(0)", "Mbn.div error*"],
      ["(new Mbn0(0))->div(3)", "0"],
      ["(new Mbn0(0))->div(-3)", "0"],
      ["(new Mbn0(1))->isInt()", "true"],
      ["(new Mbn0(1))->round()", "1"],
      ["(new Mbn0(1))->floor()", "1"],
      ["(new Mbn0(1))->ceil()", "1"],
      ["(new Mbn('0.22'))->add('0.33')", "0.55"],
      ["(new Mbn('0.22'))->sub('0.33')", "-0.11"],
      ["(new Mbn('0.22'))->mul('0.33')", "0.07"],
      ["(new Mbn('0.22'))->div('0.33')", "0.67"],
      ["(new Mbn('0.22'))->add('-0.22')", "0.00"],
      ["(new Mbn('0.28'))->sub('0.28')", "0.00"],
      ["(new Mbn('0.08'))->mul('0.09')", "0.01"],
      ["(new Mbn('-0.02'))->mul('0.03')", "0.00"],
      ["(new Mbn('0.05'))->div('10')", "0.01"],
      ["(new Mbn('0.06'))->div('-20')", "0.00"],
      ["(new Mbn3c('1.1'))->inva()", "-1,100"],
      ["(new Mbn3c('0'))->inva()", "0,000"],
      ["(new Mbn3c('-1.1'))->inva()", "1,100"],
      ["(new Mbn3c('1.1'))->invm()", "0,909"],
      ["(new Mbn3c('0'))->invm()", "Mbn.div error*"],
      ["(new Mbn3c('-1.1'))->invm()", "-0,909"],
      ["(new Mbn3c('1.1'))->abs()", "1,100"],
      ["(new Mbn3c('0'))->abs()", "0,000"],
      ["(new Mbn3c('-1.1'))->abs()", "1,100"],
      ["(new Mbn('0.4'))->floor()", "0.00"],
      ["(new Mbn('0.5'))->floor()", "0.00"],
      ["(new Mbn('0.4'))->ceil()", "1.00"],
      ["(new Mbn('0.5'))->ceil()", "1.00"],
      ["(new Mbn('0.4'))->round()", "0.00"],
      ["(new Mbn('0.49'))->round()", "0.00"],
      ["(new Mbn('0.5'))->round()", "1.00"],
      ["(new Mbn('-0.4'))->floor()", "-1.00"],
      ["(new Mbn('-0.5'))->floor()", "-1.00"],
      ["(new Mbn('-0.4'))->ceil()", "0.00"],
      ["(new Mbn('-0.5'))->ceil()", "0.00"],
      ["(new Mbn('-0.4'))->round()", "0.00"],
      ["(new Mbn('-0.5'))->round()", "-1.00"],
      ["(new Mbn('1'))->isInt()", "true"],
      ["(new Mbn('1'))->isInt()", "true"],
      ["(new Mbn('0.005'))->isInt()", "false"],
      ["(new Mbn('-0.005'))->isInt()", "false"],
      ["(new Mbn('0'))->isInt()", "true"],
      ["(new Mbn20u('21,25'))->toNumber()", "21.25"],
      ["(new Mbn20u('-21,5'))->toNumber()", "-21.5"],
      ["(new Mbn3c('21.3'))->eq('21.3')", "true"],
      ["(new Mbn3c('-21.3'))->eq('21.3')", "false"],
      ["(new Mbn3c('21.3'))->eq('21.4')", "false"],
      ["(new Mbn3c('21.4'))->eq('21.2')", "false"],
      ["(new Mbn3c('21.3'))->eq('21.4', '0.1')", "true"],
      ["(new Mbn3c('21.3'))->eq('21.2', '0.1')", "true"],
      ["(new Mbn3c('21.3'))->eq('21.1', '0.1')", "false"],
      ["(new Mbn3c('21.3'))->eq('21.5', '0.1')", "false"],
      ["(new Mbn3c('21.3'))->cmp('21.3')", "0"],
      ["(new Mbn3c('-21.3'))->cmp('21.3')", "-1"],
      ["(new Mbn3c('21.3'))->cmp('21.4')", "-1"],
      ["(new Mbn3c('21.4'))->cmp('21.2')", "1"],
      ["(new Mbn3c('21.3'))->cmp('21.4', '0.1')", "0"],
      ["(new Mbn3c('21.3'))->cmp('21.2', '0.1')", "0"],
      ["(new Mbn3c('21.3'))->cmp('21.1', '0.1')", "1"],
      ["(new Mbn3c('21.3'))->cmp('21.5', '0.1')", "-1"],
      ["(new Mbn3c('0.1'))->eq('0.3', '0.2')", "true"],
      ["(new Mbn3c('0.1'))->eq('-0.1', '0.2')", "true"],
      ["(new Mbn3c('0.1'))->eq('0', '0.2')", "true"],
      ["(new Mbn3c('0.1'))->eq('0.4', '0.2')", "false"],
      ["(new Mbn3c('0.1'))->eq('-0.2', '0.2')", "false"],
      ["(new Mbn0('2'))->pow('5')", "32"],
      ["(new Mbn0('2'))->pow('-5')", "0"],
      ["(new Mbn0('3'))->pow('3')", "27"],
      ["(new Mbn0('3'))->pow('-3')", "0"],
      ["(new Mbn(.5))->pow(7)", "0.01"],
      ["(new Mbn3c('2'))->pow('5')", "32,000"],
      ["(new Mbn3c('2'))->pow('-5')", "0,031"],
      ["(new Mbn3c('1.1'))->pow('4')", "1,464"],
      ["(new Mbn3c('1.1'))->pow('-4')", "0,683"],
      ["(new Mbn('2'))->sqrt()", "1.41"],
      ["(new Mbn3c('2'))->sqrt()", "1,414"],
      ["(new Mbn20u('2'))->sqrt()", "1,4142135623730950488"],
      ["(new Mbn20u('3'))->sqrt()", "1,73205080756887729353"],
      ["(new Mbn20u('4'))->sqrt()", "2"],
      ["$m = new Mbn('4.32'); $m->add(1.23); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->add(1.23, true); $m", "5.55"],
      ["$m = new Mbn('4.32'); $m->sub(1.23); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->sub(1.23, true); $m", "3.09"],
      ["$m = new Mbn('4.32'); $m->mul(1.23); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->mul(1.23, true); $m", "5.31"],
      ["$m = new Mbn('4.32'); $m->div(1.23); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->div(1.23, true); $m", "3.51"],
      ["$m = new Mbn('4.32'); $m->mod(1.23); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->mod(1.23, true); $m", "0.63"],
      ["$m = new Mbn('4.32'); $m->pow(2); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->pow(2, true); $m", "18.66"],
      ["$m = new Mbn('4.32'); $m->sqrt(); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->sqrt(true); $m", "2.08"],
      ["$m = new Mbn('4.32'); $m->cmp('3'); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->cmp('3', '2'); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->eq('3'); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->eq('3', '2'); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->isInt(); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->inva(); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->inva(true); $m", "-4.32"],
      ["$m = new Mbn('4.32'); $m->invm(); $m", "4.32"],
      ["$m = new Mbn('4.32'); $m->invm(true); $m", "0.23"],
      ["$m = new Mbn('-4.32'); $m->abs(); $m", "-4.32"],
      ["$m = new Mbn('-4.32'); $m->abs(true); $m", "4.32"],
      ["$m = new Mbn('-4.32'); $m->intp(); $m", "-4.32"],
      ["$m = new Mbn('-4.32'); $m->intp(true); $m", "-4.00"],
      ["$m = new Mbn('-4.32'); $m->floor(); $m", "-4.32"],
      ["$m = new Mbn('-4.32'); $m->floor(true); $m", "-5.00"],
      ["$m = new Mbn('-4.32'); $m->ceil(); $m", "-4.32"],
      ["$m = new Mbn('-4.32'); $m->ceil(true); $m", "-4.00"],
      ["$m = new Mbn('-4.32'); $m->round(); $m", "-4.32"],
      ["$m = new Mbn('-4.32'); $m->round(true); $m", "-4.00"],
      ["$m = new Mbn('-4.32'); $m->mod(3); $m", "-4.32"],
      ["$m = new Mbn('-4.32'); $m->mod(3, true); $m", "-1.32"],
      ["$m = new Mbn('-4.32'); $m->set(3); $m", "3.00"],
      ["$m = new Mbn('-4.32'); $m->sgn(); $m", "-4.32"],
      ["$m = new Mbn('-4.32'); $m->sgn(true); $m", "-1.00"],
      ["$m = new Mbn('-0.52'); $m->pow(-2); $m", "-0.52"],
      ["(new Mbn('3'))->split([1,3])", "0.75,2.25"],
      ["(new Mbn('3'))->split([2,3])", "1.20,1.80"],
      ["(new Mbn('3'))->split([3,3])", "1.50,1.50"],
      ["(new Mbn('3'))->split([1,2,3])", "0.50,1.00,1.50"],
      ["(new Mbn('2'))->split([1,1,1])", "0.67,0.67,0.66"],
      ["(new Mbn('1'))->split([0,1,1])", "0.00,0.50,0.50"],
      ["(new Mbn('1'))->split([1,1,0])", "0.50,0.50,0.00"],
      ["(new Mbn('100'))->split([99.99,0.01])", "99.99,0.01"],
      ["(new Mbn('100'))->split([0.01,99.99])", "0.01,99.99"],
      ["(new Mbn('100'))->split([100,23])", "81.30,18.70"],
      ["(new Mbn('42'))->split()", "21.00,21.00"],
      ["(new Mbn('42'))->split(5)", "8.40,8.40,8.40,8.40,8.40"],
      ["(new Mbn('100'))->split([100,-23])", "Mbn.split error*"],
      ["(new Mbn3c('1.234'))->mod('0.401')", "0,031"],
      ["(new Mbn3c('3.234'))->mod('1')", "0,234"],
      ["(new Mbn3c('1.234'))->mod('-0.401')", "0,031"],
      ["(new Mbn3c('3.234'))->mod('-1')", "0,234"],
      ["(new Mbn3c('-1.234'))->mod('0.401')", "-0,031"],
      ["(new Mbn3c('-3.234'))->mod('1')", "-0,234"],
      ["(new Mbn3c('2.234'))->mod('4')", "2,234"],
      ["(new Mbn3c('2.123'))->intp()", "2,000"],
      ["(new Mbn3c('3.987'))->intp()", "3,000"],
      ["(new Mbn3c('-4.123'))->intp()", "-4,000"],
      ["(new Mbn3c('-5.987'))->intp()", "-5,000"],
      ["(new Mbn3c('0'))->intp()", "0,000"],
      ["(new Mbn('-99.5'))->mod(100)", "-99.50"],
      ["(new Mbn('99.5'))->mod(100)", "99.50"],
      ["(new Mbn0('55'))->mod(10)", "5"],
      ["(new Mbn0('-55'))->mod(10)", "-5"],
      ["(new Mbn0('54'))->mod(10)", "4"],
      ["(new Mbn0('-54'))->mod(10)", "-4"],
      ["(new Mbn('-2'))->max(-3)", "-2.00"],
      ["(new Mbn('-3'))->max(-2)", "-2.00"],
      ["(new Mbn('-2'))->max(3)", "3.00"],
      ["(new Mbn('3'))->max(-2)", "3.00"],
      ["(new Mbn('2'))->max(4)", "4.00"],
      ["(new Mbn('4'))->max(2)", "4.00"],
      ["(new Mbn('0'))->max(2)", "2.00"],
      ["(new Mbn('0'))->max(-2)", "0.00"],
      ["(new Mbn('-2'))->min(-3)", "-3.00"],
      ["(new Mbn('-3'))->min(-2)", "-3.00"],
      ["(new Mbn('-2'))->min(3)", "-2.00"],
      ["(new Mbn('3'))->min(-2)", "-2.00"],
      ["(new Mbn('2'))->min(4)", "2.00"],
      ["(new Mbn('4'))->min(2)", "2.00"],
      ["(new Mbn('0'))->min(2)", "0.00"],
      ["(new Mbn('0'))->min(-2)", "-2.00"],
      ["(new Mbn('0'))->set(-2)", "-2.00"],
      ["(new Mbn('0'))->sgn()", "0.00"],
      ["(new Mbn('-0.01'))->sgn()", "-1.00"],
      ["(new Mbn('0.03'))->sgn()", "1.00"],
      ["Mbn::def('E')", "2.72"],
      ["Mbn0::def('E')", "3"],
      ["Mbn3c::def('E')", "2,718"],
      ["Mbn20u::def('E')", "2,71828182845904523536"],
      ["Mbn::def('PI')", "3.14"],
      ["Mbn0::def('PI')", "3"],
      ["Mbn3c::def('PI')", "3,142"],
      ["Mbn20u::def('PI')", "3,14159265358979323846"],
      ["Mbn::def('MbnP')", "Mbn.def error*"],
      ["Mbn3c::def('MbnP')", "Mbn.def error*"],
      ["Mbn::def('X')", "Mbn.def error*"],
      ["Mbn::def(null, 'X')", "false"],
      ["Mbn::def('X', 4.2)", "4.20"],
      ["Mbn::def(null, 'X')", "true"],
      ["Mbn::def('X')", "4.20"],
      ["Mbn::reduce('add', [])", "0.00"],
      ["Mbn::reduce('add', [1,6,-2])", "5.00"],
      ["Mbn::reduce('mul', [1,6,-2])", "-12.00"],
      ["Mbn::reduce('inva', [1,6,-2])", "-1.00,-6.00,2.00"],
      ["Mbn::reduce('sgn', [1,6,-2])", "1.00,1.00,-1.00"],
      ["Mbn::reduce('sgn', [])", ""],
      ["Mbn::reduce('set', [1,6,-2])", "1.00,6.00,-2.00"],
      ["Mbn::calc('2+2*2')", "6.00"],
      ["new Mbn('=2+2*2')", "6.00"],
      ["new Mbn('=2')", "2.00"],
      ["new Mbn('=2+3')", "5.00"],
      ["new Mbn('=2-3')", "-1.00"],
      ["new Mbn('=2/3')", "0.67"],
      ["new Mbn('=2^3')", "8.00"],
      ["new Mbn('=(1+2)(2+3)')", "15.00"],
      ["new Mbn('=-2')", "-2.00"],
      ["new Mbn('=(-2+1)')", "-1.00"],
      ["new Mbn('=(-2+-1)')", "-3.00"],
      ["new Mbn('=2^3^2')", "512.00"],
      ["new Mbn('=(2^3)^2')", "64.00"],
      ["new Mbn('=12/3/2')", "2.00"],
      ["new Mbn('=12/(3/2)')", "8.00"],
      ["new Mbn('=12*3/2')", "18.00"],
      ["new Mbn('=12*3/2')", "18.00"],
      ["new Mbn('=12/3*2')", "8.00"],
      ["new Mbn('=12/(3*2)')", "2.00"],
      ["new Mbn('=-7(-sqrt(4))')", "14.00"],
      ["new Mbn('=sqrt(2)')", "1.41"],
      ["new Mbn('=abs(-2-3)')", "5.00"],
      ["new Mbn('=-abs(-2-3)')", "-5.00"],
      ["new Mbn('=floor(3/2)')", "1.00"],
      ["new Mbn('=floor(3/-2)')", "-2.00"],
      ["new Mbn('=floor(-3/-2)')", "1.00"],
      ["new Mbn('=ceil(3/2)')", "2.00"],
      ["new Mbn('=ceil(-3/2)')", "-1.00"],
      ["new Mbn('=ceil(PI)')", "4.00"],
      ["new Mbn('=floor(PI)')", "3.00"],
      ["new Mbn('=ceil(-PI)')", "-3.00"],
      ["new Mbn('=floor(-PI)')", "-4.00"],
      ["new Mbn('=round(PI)')", "3.00"],
      ["new Mbn('=round(-PI)')", "-3.00"],
      ["new Mbn('=int(PI)')", "3.00"],
      ["new Mbn('=int(-PI)')", "-3.00"],
      ["new Mbn('=ceil(E)')", "3.00"],
      ["new Mbn('=floor(E)')", "2.00"],
      ["new Mbn('=ceil(-E)')", "-2.00"],
      ["new Mbn('=floor(-E)')", "-3.00"],
      ["new Mbn('=round(E)')", "3.00"],
      ["new Mbn('=round(-E)')", "-3.00"],
      ["new Mbn('=int(E)')", "2.00"],
      ["new Mbn('=int(-E)')", "-2.00"],
      ["new Mbn('=round(E)&E')", "2.72"],
      ["new Mbn('=round(PI)&PI')", "3.00"],
      ["new Mbn('=round(E)|E')", "3.00"],
      ["new Mbn('=round(PI)|PI')", "3.14"],
      ["new Mbn('=0&1|1')", "1.00"],
      ["new Mbn('=1|1&0')", "1.00"],
      ["new Mbn('=0&(1|1)')", "0.00"],
      ["new Mbn('=(1|1)&0')", "0.00"],
      ["Mbn::calc('0&1|1')", "1.00"],
      ["Mbn::calc('0&(1|1)')", "0.00"],
      ["new Mbn('=1',{a:0.5})", "1.00"],
      ["new Mbn('=.3a',{a:0.6})", "0.18"],
      ["new Mbn('=2 a a',{a:0.6})", "0.72"],
      ["new Mbn('=2a',{a:0.1})", "0.20"],
      ["new Mbn('=a(a+1)',{a:0.5})", "0.75"],
      ["new Mbn('=a(-a+1)',{a:0.6})", "0.24"],
      ["Mbn::calc('dsfsda(558)')", "Mbn.calc error*"],
      ["(new Mbn(123.12))->format()", "123.12"],
      ["(new Mbn(1234))->format()", "1 234.00"],
      ["(new Mbn(-1234))->format()", "-1 234.00"],
      ["(new Mbn(1234567.12))->format()", "1 234 567.12"],
      ["(new Mbn('-12 345.13'))", "-12345.13"],
      ["(new Mbn('-12 345.1 3'))", "Mbn error*"],
      ["(new Mbn('=1 1.11 * 11.11'))", "123.43"],
      ["(new Mbn('=1 1.1 1 * 11.11'))", "Mbn error*"],
      ["(new Mbn2nef('=10'))", "10.00"],
      ["(new Mbn2nef('=10*10'))", "Mbn error*"],
      ["(Mbn2nef::calc('10*10'))", "100.00"],
      ["(Mbn2nef::calc('123*456'))", "56 088.00"],
      ["(Mbn2nef::calc('123*456'))->format(false)", "56088.00"],
      ["(Mbn2nef::calc('123*456'))->toNumber()", "56088"],
      ["(new Mbn(0))->mod(10)", "0.00"],
      ["Mbn::calc('(p-p#10^4)/10^4#10',{p:1230456789})", "5.00"],
      ["(new Mbn(2))->split(0)", "Mbn.split error*"],
      ["(new Mbn(2))->split([])", "Mbn.split error*"],
      ["Mbn::calc('a+b',{a:1, b:null})", "1.00"],
      ["(new Mbn(2))->split([1, null])", "2.00,0.00"],
      ["Mbn::reduce('add', [5, 7, 10])", "22.00"],
      ["Mbn::reduce('add', [5, 7, 10], 1.3)", "6.30,8.30,11.30"],
      ["Mbn::reduce('pow', [5, 2, 3], 3)", "125.00,8.00,27.00"],
      ["Mbn::reduce('add', [5, 7, 10], [1.1, 1.2, 1.3])", "6.10,8.20,11.30"],
      ["Mbn::reduce('add', [5, 7, 10], [1.1, 1.2])", "Mbn.reduce error*"],
      ["Mbn::reduce('add', [1.1, 1.2], [5, 7, 10])", "Mbn.reduce error*"],
      ["(new Mbn('55.555x'))", "Mbn error*"],
      ["new Mbn('=50+10%')", "50.10"],
      ["Mbn::reduce('pow', [5, 7, 10], 2)", "25.00,49.00,100.00"],
      ["Mbn::reduce('pow', 2, [5, 7, 10])", "32.00,128.00,1024.00"],
      ["Mbn::reduce('mod', [5, 7.12, 10], [2, 3, 4])", "1.00,1.12,2.00"],
      ["Mbn::reduce('sub', [5, 7.12, 10], [2, 3, 4])", "3.00,4.12,6.00"],
      ["new Mbn0('=190%')", "2"],
      ["new Mbn([5, 7])", "Mbn error*"],
      ["new Mbn('=a * b', {a:0.1})", "Mbn.calc error*"],
      ["Mbn0::def(null, 'MbnP')", "false"],
      ["Mbn0::def(null, 'eps')", "true"],
      ["Mbn::def('eps')", "0.01"],
      ["Mbn3c::def('eps')", "0,001"],
      ["Mbn0::def('eps')", "1"],
      ["Mbn2nef::def('eps')", "0.01"],
      ["new Mbn2nef('=15')", "15.00"],
      ["new Mbn2nef('=+15')", "15.00"],
      ["new Mbn2nef('=-15')", "-15.00"],
      ["0", "0"]
   ]
}
